<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="yes">clock_config.h</includes>
    <includes local="yes">pin_mux.h</includes>
    <includes refid="types_8h" local="yes">Types\types.h</includes>
    <includes refid="_p_i_t_8h" local="yes">PIT\PIT.h</includes>
    <includes refid="_r_t_c_8h" local="yes">RTC\RTC.h</includes>
    <includes refid="_f_t_m_8h" local="yes">FTM\FTM.h</includes>
    <includes refid="_u_a_r_t_8h" local="yes">UART\UART.h</includes>
    <includes refid="_flash_8h" local="yes">Flash\Flash.h</includes>
    <includes refid="_l_e_ds_8h" local="yes">LEDs\LEDs.h</includes>
    <includes refid="packet_8h" local="yes">Packet\packet.h</includes>
    <includes refid="critical_8h" local="yes">Critical\critical.h</includes>
    <includes refid="accel_8h" local="yes">Accel\accel.h</includes>
    <includes local="yes">system_MK64F12.h</includes>
    <incdepgraph>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="10">
        <label>UART\UART.h</label>
        <link refid="_u_a_r_t_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Critical\critical.h</label>
        <link refid="critical_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="17">
        <label>system_MK64F12.h</label>
      </node>
      <node id="16">
        <label>Accel\accel_FXO.h</label>
        <link refid="accel___f_x_o_8h"/>
      </node>
      <node id="8">
        <label>RTC\RTC.h</label>
        <link refid="_r_t_c_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Packet\packet.h</label>
        <link refid="packet_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Accel\accel.h</label>
        <link refid="accel_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>clock_config.h</label>
      </node>
      <node id="9">
        <label>FTM\FTM.h</label>
        <link refid="_f_t_m_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>pin_mux.h</label>
      </node>
      <node id="12">
        <label>LEDs\LEDs.h</label>
        <link refid="_l_e_ds_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Flash\Flash.h</label>
        <link refid="_flash_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>PIT\PIT.h</label>
        <link refid="_p_i_t_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Types\types.h</label>
        <link refid="types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/Jeong/git/04/source/main.c</label>
        <link refid="main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__main__module_1ga2afce0a47a93eee73a314d53e4890153" prot="public" static="no" strong="no">
        <type></type>
        <name>Command</name>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153a702303e5a73fa27b2169bf076dbacc01" prot="public">
          <name>MCU_STARTUP</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153a3fe3c7f760499af331f615375fec91e2" prot="public">
          <name>MCU_FLASH_PROGRAM</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153aa9c122b9c625056eb1642f67988fd3e6" prot="public">
          <name>MCU_FLASH_READ</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153a8c5f7c4d1adb07fb8bae756433b09acc" prot="public">
          <name>MCU_VERSION</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153a0df51afa6a450d0e07a60f203eda87b8" prot="public">
          <name>MCU_PROTOCOL</name>
          <initializer>= 0x0A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153ac749637bf30798dc5bb165d6525774bc" prot="public">
          <name>MCU_NUMBER</name>
          <initializer>= 0x0B</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153ab711b724196f4a726939593f131ebe4f" prot="public">
          <name>MCU_TIME</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153a7bc6a2351bbeaeab85ab8ce957f83d09" prot="public">
          <name>MCU_MODE</name>
          <initializer>= 0x0D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__main__module_1gga2afce0a47a93eee73a314d53e4890153a297835d606e78c9dee7b1520f730c070" prot="public">
          <name>MCU_ACCEL</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>packet enumerated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="62" column="1" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="61" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__main__module_1ga4f6628df3189e988b65658a725188fd4" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t MAJOR</definition>
        <argsstring></argsstring>
        <name>MAJOR</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Version number High </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="49" column="15" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1ga25fcd7302027275a87f9461635744e0e" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t MINOR</definition>
        <argsstring></argsstring>
        <name>MINOR</name>
        <initializer>= 0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Version number Low </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="50" column="15" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1gab4e7c863c9b1387f029360b3bc965194" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int STU_NUM</definition>
        <argsstring></argsstring>
        <name>STU_NUM</name>
        <initializer>= 5084</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last 4 digit of student number </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="52" column="11" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1gaad3c46d89d0030281432298983b6c29b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MODE_NUM</definition>
        <argsstring></argsstring>
        <name>MODE_NUM</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MCU mode number </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="53" column="11" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1ga3948594ac93f0c5008fee3efcb07de77" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t BAUDRATE</definition>
        <argsstring></argsstring>
        <name>BAUDRATE</name>
        <initializer>= 115200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>baudrate </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="55" column="16" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1ga7ce0dded27916b9e803c5066b904a796" prot="public" static="yes" mutable="no">
        <type><ref refid="unionuint16union__t" kindref="compound">uint16union_t</ref> *</type>
        <definition>volatile uint16union_t* NvMcuNb</definition>
        <argsstring></argsstring>
        <name>NvMcuNb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>non volatile MCU Number </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="76" column="31" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1gadbc23f21b44496bd040ead8ec1524d30" prot="public" static="yes" mutable="no">
        <type><ref refid="unionuint16union__t" kindref="compound">uint16union_t</ref> *</type>
        <definition>volatile uint16union_t* NvMcuMd</definition>
        <argsstring></argsstring>
        <name>NvMcuMd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>non volatile MCU Mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="77" column="31" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1ga94a0ab2160b97b3ec0d4e386786ee0a0" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_t_f_t_m_channel" kindref="compound">TFTMChannel</ref></type>
        <definition>TFTMChannel ChannelFTM</definition>
        <argsstring></argsstring>
        <name>ChannelFTM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores FTM channel clock and current mode data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="79" column="20" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__main__module_1ga5990a3809ad17c34d1b632e643812560" prot="public" static="yes" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t MCGFFCLK</definition>
        <argsstring></argsstring>
        <name>MCGFFCLK</name>
        <initializer>= 48828</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="153" column="23" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__main__module_1ga2dabe81b72bf8ec8155cd875975beb07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RTCCallback</definition>
        <argsstring>(void *arg)</argsstring>
        <name>RTCCallback</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>RTC callback function toggles red LED and sends time to PC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to null </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="86" column="6" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="86" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga83e32d3437f8fdbf06974d23242a9462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PITCallback</definition>
        <argsstring>(void *arg)</argsstring>
        <name>PITCallback</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>PIT callback function toggles green LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to null </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="100" column="6" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="100" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1gae21c1c1f38c8de226d06fa5b986c57df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTMCallback</definition>
        <argsstring>(void *arg)</argsstring>
        <name>FTMCallback</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>FTM callback function turns off blue LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to null </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="121" column="6" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1gadedc9519d7ac6743a1a2452fc473cc5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AccelCallBack</definition>
        <argsstring>(void *arg)</argsstring>
        <name>AccelCallBack</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Accelerometer callback function, read data from the accelerometer using interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to null </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="131" column="6" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga2dedc269a4359add8644586c8bdcd0d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void I2CCallBack</definition>
        <argsstring>(void *arg)</argsstring>
        <name>I2CCallBack</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>I2C callback function, send accel packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to null </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="144" column="6" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga03176d9e2593ae75321cbdd81dfcc083" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void StructInit</definition>
        <argsstring>(void)</argsstring>
        <name>StructInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sets initial FTM channel structure values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Assumes the FTM has been initialized. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="159" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="159" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1gaa5092307bb5f36161fd4239f21ae8eed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SendStartupPackets</definition>
        <argsstring>(void)</argsstring>
        <name>SendStartupPackets</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends startup packets to the PC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if sending the startup packets was successful. </para>
</simplesect>
<simplesect kind="note"><para>Assumes that MCUInit has been called successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="182" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="182" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga05d6cff2c4cf03e26c5c05f4038f9dca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool MCUInit</definition>
        <argsstring>(void)</argsstring>
        <name>MCUInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes the MCU by initializing all variables and then sending startup packets to the PC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if sending the startup packets was successful. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="203" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="203" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga955bec09a746ef3069f87646261721c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleStartupPacket</definition>
        <argsstring>(void)</argsstring>
        <name>HandleStartupPacket</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Respond to a Startup packet sent from the PC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if the packet was handled successfully. </para>
</simplesect>
<simplesect kind="note"><para>Assumes that MCUInit has been called successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="265" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="265" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1gafac380800173ae24316efc2a1b60c4cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleFlashProgram</definition>
        <argsstring>(void)</argsstring>
        <name>HandleFlashProgram</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Programs one byte from Flash. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if the packet was programmed successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="278" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="278" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1gac3114d818fed650ed82ded231333d1e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleFlashRead</definition>
        <argsstring>(void)</argsstring>
        <name>HandleFlashRead</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reads one byte from Flash. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if the packet was read successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="296" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="296" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga57cecf001ee7a59329d9ddb803961fe3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleGetVersion</definition>
        <argsstring>(void)</argsstring>
        <name>HandleGetVersion</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Respond to packets sent from the PC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if the packet was handled successfully. </para>
</simplesect>
<simplesect kind="note"><para>Assumes that MCUInit has been called successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="313" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="313" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga6ef0d8b0c724209fa9f9adc0be8fa599" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleMCUProtocol</definition>
        <argsstring>(void)</argsstring>
        <name>HandleMCUProtocol</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="326" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="326" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1gacdeac81ad327da00a61070a8868e7d3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleMCUNumber</definition>
        <argsstring>(void)</argsstring>
        <name>HandleMCUNumber</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Respond to packets sent from the PC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if the packet was handled successfully. </para>
</simplesect>
<simplesect kind="note"><para>Assumes that MCUInit has been called successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="356" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="356" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga5f138f41b9d3351df165ea9052813f08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleMCUTime</definition>
        <argsstring>(void)</argsstring>
        <name>HandleMCUTime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="373" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="373" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1gadf223f06f4ccbee3310e252971fcb0fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HandleMCUMode</definition>
        <argsstring>(void)</argsstring>
        <name>HandleMCUMode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Respond to packets sent from the PC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - TRUE if the packet was handled successfully. </para>
</simplesect>
<simplesect kind="note"><para>Assumes that MCUInit has been called successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="390" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="390" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga0fdafa1dbb51cd815f0f99df7d1c2582" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void HandlePackets</definition>
        <argsstring>(void)</argsstring>
        <name>HandlePackets</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Respond to packets sent from the PC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Assumes that MCUInit has been called successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="414" column="13" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="414" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="group__main__module_1ga840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Main function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/source/main.c" line="479" column="5" bodyfile="C:/Users/Jeong/git/04/source/main.c" bodystart="479" bodyend="495"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main module. This module implements serial port (USB) communications with a PC. The Simple Serial Communication Protocol is used. The command handlers for a several commands (defined in the protocol) are implemented. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="version"><para>4.0 </para>
</simplesect>
<simplesect kind="author"><para>Jeong Bin Lee and George El Bazouni </para>
</simplesect>
<simplesect kind="date"><para>2020-5-22 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="comment">/*<sp/>MODULE<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clock_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pin_mux.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>New<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">Types\types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//Periodic<sp/>Interrupt<sp/>Timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_i_t_8h" kindref="compound">PIT\PIT.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//Real<sp/>Time<sp/>Clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_r_t_c_8h" kindref="compound">RTC\RTC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//Flex<sp/>Timer<sp/>Module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_t_m_8h" kindref="compound">FTM\FTM.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Serial<sp/>Communication<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_a_r_t_8h" kindref="compound">UART\UART.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//Flash<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_flash_8h" kindref="compound">Flash\Flash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//LED<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_l_e_ds_8h" kindref="compound">LEDs\LEDs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Packet<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="packet_8h" kindref="compound">Packet\packet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//critical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="critical_8h" kindref="compound">Critical\critical.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//accelerometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="accel_8h" kindref="compound">Accel\accel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>system<sp/>for<sp/>module<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system_MK64F12.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//clock<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;drivers\fsl_clock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__main__module_1ga4f6628df3189e988b65658a725188fd4" kindref="member">MAJOR</ref><sp/>=<sp/>0x01;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__main__module_1ga25fcd7302027275a87f9461635744e0e" kindref="member">MINOR</ref><sp/>=<sp/>0x00;<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1gab4e7c863c9b1387f029360b3bc965194" kindref="member">STU_NUM</ref><sp/>=<sp/>5084;<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1gaad3c46d89d0030281432298983b6c29b" kindref="member">MODE_NUM</ref><sp/>=<sp/>1;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__main__module_1ga3948594ac93f0c5008fee3efcb07de77" kindref="member">BAUDRATE</ref><sp/>=<sp/>115200;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment">//<sp/>Commands</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1ga2afce0a47a93eee73a314d53e4890153" kindref="member">Command</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>MCU_STARTUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x04,<sp/><sp/></highlight><highlight class="comment">//set<sp/>startup<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>MCU_FLASH_PROGRAM<sp/>=<sp/>0x07,<sp/><sp/></highlight><highlight class="comment">//set<sp/>flash<sp/>write<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>MCU_FLASH_READ<sp/><sp/><sp/><sp/>=<sp/>0x08,<sp/><sp/></highlight><highlight class="comment">//set<sp/>flash<sp/>read<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>MCU_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x09,<sp/><sp/></highlight><highlight class="comment">//set<sp/>get<sp/>version<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>MCU_PROTOCOL<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0A,<sp/><sp/></highlight><highlight class="comment">//set<sp/>protocol<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>MCU_NUMBER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0B,<sp/><sp/></highlight><highlight class="comment">//set<sp/>mcu<sp/>number<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>MCU_TIME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0C,<sp/><sp/></highlight><highlight class="comment">//set<sp/>mcu<sp/>time<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>MCU_MODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0D,<sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>mcu<sp/>mode<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>MCU_ACCEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x10<sp/><sp/></highlight><highlight class="comment">//set<sp/>mcu<sp/>accel<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>global<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="unionuint16union__t" kindref="compound">uint16union_t</ref><sp/>*NvMcuNb;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="unionuint16union__t" kindref="compound">uint16union_t</ref><sp/>*NvMcuMd;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_t_f_t_m_channel" kindref="compound">TFTMChannel</ref><sp/>ChannelFTM;<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1ga2dabe81b72bf8ec8155cd875975beb07" kindref="member">RTCCallback</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>uint8_t<sp/>hours,<sp/>minutes,<sp/>seconds;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//toggle<sp/>red<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="group___l_e_ds__module_1ga73f961351cfc02fcf8306b14e16d4429" kindref="member">LEDs_Toggle</ref>(LED_RED);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//send<sp/>current<sp/>time<sp/>to<sp/>PC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="group___r_t_c__module_1ga46e1f15e3b27e2de58d7f213a3bc865d" kindref="member">RTC_Get</ref>(&amp;hours,<sp/>&amp;minutes,<sp/>&amp;seconds);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Packet_Put(MCU_TIME,<sp/>hours,<sp/>minutes,<sp/>seconds);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1ga83e32d3437f8fdbf06974d23242a9462" kindref="member">PITCallback</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>uint8_t<sp/>accelData<sp/>=<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[0]<sp/>^<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[1]<sp/>^<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[2];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ACCEL:<sp/>accelerometer<sp/>in<sp/>polling<sp/>mode<sp/>(2Hz<sp/>=<sp/>0.5s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ACCEL:<sp/>if<sp/>x<sp/>y<sp/>z<sp/>has<sp/>changed,<sp/>send<sp/>value<sp/>to<sp/>PC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__accel__module_1ga66554c667936238ffe45c91e60545998" kindref="member">AccelMode</ref>)<sp/></highlight><highlight class="comment">//check<sp/>for<sp/>polling<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//toggle<sp/>green<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___l_e_ds__module_1ga73f961351cfc02fcf8306b14e16d4429" kindref="member">LEDs_Toggle</ref>(LED_GREEN);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__accel__module_1ga8cc8e053f2474e24cb761f1de0f769d8" kindref="member">Accel_ReadXYZ</ref>(<ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>data<sp/>changed,<sp/>send<sp/>it<sp/>to<sp/>PC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(accelData<sp/>!=<sp/>(<ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[0]<sp/>^<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[1]<sp/>^<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[2]))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_ACCEL,<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[0],<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[1],<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[2]);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1gae21c1c1f38c8de226d06fa5b986c57df" kindref="member">FTMCallback</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//turn<sp/>blue<sp/>LED<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="group___l_e_ds__module_1gab96427411f19150a344e5f238bfa15b9" kindref="member">LEDs_Off</ref>(LED_BLUE);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1gadedc9519d7ac6743a1a2452fc473cc5a" kindref="member">AccelCallBack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//check<sp/>accel<sp/>in<sp/>interrupt<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__accel__module_1ga66554c667936238ffe45c91e60545998" kindref="member">AccelMode</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__accel__module_1ga8cc8e053f2474e24cb761f1de0f769d8" kindref="member">Accel_ReadXYZ</ref>(<ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Packet_Put(MCU_ACCEL,<sp/>AccelData.bytes[0],<sp/>AccelData.bytes[1],<sp/>AccelData.bytes[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1ga2dedc269a4359add8644586c8bdcd0d2" kindref="member">I2CCallBack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//I2C<sp/>in<sp/>interrupt<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//information<sp/>received,<sp/>send<sp/>data<sp/>to<sp/>PC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Accel_ReadXYZ(AccelData.bytes);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_ACCEL,<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[0],<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[1],<sp/><ref refid="group__accel__module_1gad741befccec501382f5226a3146861e2" kindref="member">AccelData</ref>.<ref refid="union_accel_data__t_1a95f21c2d654a80ac47ff56059e77b356" kindref="member">bytes</ref>[2]);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>MCGFFCLK<sp/>=<sp/>48828;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StructInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initialise<sp/>FTM<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>ChannelFTM.channelNb<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//channel<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>ChannelFTM.delayNanoseconds<sp/>=<sp/>MCGFFCLK;</highlight><highlight class="comment">//CLOCK_GetFreq(kCLOCK_McgFixedFreqClk);//delay<sp/>by<sp/>1<sp/>clock<sp/>(48828<sp/>or<sp/>20480)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>ChannelFTM.ioType.outputAction<sp/>=<sp/>TIMER_OUTPUT_LOW;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>ChannelFTM.timerFunction<sp/>=<sp/>TIMER_FUNCTION_OUTPUT_COMPARE;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>ChannelFTM.callbackFunction<sp/>=<sp/><ref refid="group__main__module_1gae21c1c1f38c8de226d06fa5b986c57df" kindref="member">FTMCallback</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>ChannelFTM.callbackArguments<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="group__accel__module_1gaa920b152f9edd5264c246995c007bc3f" kindref="member">Accel_Setup</ref>.<ref refid="struct_accel_setup__t_1a32de9ceba4dc8a0c785f25797b7dbd46" kindref="member">dataReadyCallbackFunction</ref><sp/>=<sp/><ref refid="group__main__module_1gadedc9519d7ac6743a1a2452fc473cc5a" kindref="member">AccelCallBack</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="group__accel__module_1gaa920b152f9edd5264c246995c007bc3f" kindref="member">Accel_Setup</ref>.<ref refid="struct_accel_setup__t_1aa3890a82b78961d08e1d299ec40cd580" kindref="member">dataReadyCallbackArguments</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="group__accel__module_1gaa920b152f9edd5264c246995c007bc3f" kindref="member">Accel_Setup</ref>.<ref refid="struct_accel_setup__t_1a4413fafc42cfb2c64c8bd23684ebcf80" kindref="member">readCompleteCallbackFunction</ref><sp/>=<sp/><ref refid="group__main__module_1ga2dedc269a4359add8644586c8bdcd0d2" kindref="member">I2CCallBack</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="group__accel__module_1gaa920b152f9edd5264c246995c007bc3f" kindref="member">Accel_Setup</ref>.<ref refid="struct_accel_setup__t_1ab92d1dfa467b00fa4d6f782d4a7e755e" kindref="member">readCompleteCallbackArguments</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SendStartupPackets(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//MCU_STARTUP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>success<sp/>=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_STARTUP,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//GET_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_VERSION,<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">,<sp/><ref refid="group__main__module_1ga4f6628df3189e988b65658a725188fd4" kindref="member">MAJOR</ref>,<sp/><ref refid="group__main__module_1ga25fcd7302027275a87f9461635744e0e" kindref="member">MINOR</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//MCU_NUMBER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_NUMBER,<sp/>0x01,<sp/>NvMcuNb-&gt;s.Lo,<sp/>NvMcuNb-&gt;s.Hi);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//MCU_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_MODE,<sp/>0x01,<sp/>NvMcuMd-&gt;s.Lo,<sp/>NvMcuMd-&gt;s.Hi);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//MCU_PROTOCOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_PROTOCOL,<sp/>0x01,<sp/>0x01,<sp/>0x00);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MCUInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>BOARD_InitPins();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>BOARD_InitBootClocks();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//no<sp/>interrupts<sp/>while<sp/>initialising<sp/>modules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>EnterCritical();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//uint32_t<sp/>priMask<sp/>=<sp/>DisableGlobalIRQ();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>uint8_t<sp/>hrs,<sp/>min,<sp/>sec;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>uint32_t<sp/>clk<sp/>=<sp/>CLOCK_GetFreq(kCLOCK_BusClk);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initiaise<sp/>modules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>success<sp/><sp/>=<sp/><ref refid="group___flash__module_1gaa5782279b5e558cafc2f135c0a1177d3" kindref="member">Flash_Init</ref>();<sp/></highlight><highlight class="comment">//initialise<sp/>Flash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___packet__module_1gadfd22f81a651814e66ce22aaa55ef17c" kindref="member">Packet_Init</ref>(SystemCoreClock,<sp/><ref refid="group__main__module_1ga3948594ac93f0c5008fee3efcb07de77" kindref="member">BAUDRATE</ref>);<sp/></highlight><highlight class="comment">//Packet_Init<sp/>calls<sp/>UART_Init<sp/>which<sp/>calls<sp/>FIFO_Init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___l_e_ds__module_1gaea5d2a9d1aacacc05e4d772a555b2d9d" kindref="member">LEDs_Init</ref>();<sp/></highlight><highlight class="comment">//initialise<sp/>LEDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initialise<sp/>PIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___p_i_t__module_1gae69097a83912a25b357df1046aea9b52" kindref="member">PIT_Init</ref>(clk,<sp/><ref refid="group__main__module_1ga83e32d3437f8fdbf06974d23242a9462" kindref="member">PITCallback</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initialise<sp/>RTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___r_t_c__module_1ga1eff20f412d72f94182b7fca0b3b0925" kindref="member">RTC_Init</ref>(<ref refid="group__main__module_1ga2dabe81b72bf8ec8155cd875975beb07" kindref="member">RTCCallback</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initialise<sp/>FTM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___f_t_m__module_1ga5f31811e067b5690d5f73c8e77019a6b" kindref="member">FTM_Init</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___f_t_m__module_1gae4928af832114c8173e43d10e4144c1f" kindref="member">FTM_Set</ref>(&amp;ChannelFTM);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initialise<sp/>accel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group__accel__module_1ga23d298c5c59e0867f73a0560fe28bb16" kindref="member">Accel_Init</ref>(clk,<sp/>&amp;<ref refid="group__accel__module_1gaa920b152f9edd5264c246995c007bc3f" kindref="member">Accel_Setup</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//enable<sp/>interrupts<sp/>after<sp/>module<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>ExitCritical();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="group___r_t_c__module_1ga46e1f15e3b27e2de58d7f213a3bc865d" kindref="member">RTC_Get</ref>(&amp;hrs,<sp/>&amp;min,<sp/>&amp;sec);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="group___r_t_c__module_1gacbe916e4fad6bfc2ffcde604fa6afb52" kindref="member">RTC_Set</ref>(hrs,min,sec);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//**********TEST<sp/>OUT<sp/>THE<sp/>NUMBER<sp/>THEN<sp/>TEST<sp/>OUT<sp/>THE<sp/>MODE***********//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>memory<sp/>in<sp/>flash<sp/>to<sp/>MCU<sp/>number<sp/>and<sp/>MCU<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___flash__module_1ga50871aff0f5af1e092aea3ed2545cf72" kindref="member">Flash_AllocateVar</ref>((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;NvMcuNb,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*NvMcuNb));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/><ref refid="group___flash__module_1ga50871aff0f5af1e092aea3ed2545cf72" kindref="member">Flash_AllocateVar</ref>((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;NvMcuMd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*NvMcuMd));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initialise<sp/>the<sp/>Flash<sp/>memory<sp/>with<sp/>student<sp/>number<sp/>and<sp/>MCU<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success<sp/>&amp;&amp;<sp/>(NvMcuNb-&gt;l<sp/>==<sp/>0xFFFF))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___flash__module_1ga1458f5e4ac15e1848ae0bde32fe5b5f3" kindref="member">Flash_Write16</ref>((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t*)NvMcuNb,<sp/><ref refid="group__main__module_1gab4e7c863c9b1387f029360b3bc965194" kindref="member">STU_NUM</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success<sp/>&amp;&amp;<sp/>(NvMcuMd-&gt;l<sp/>==<sp/>0xFFFF))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___flash__module_1ga1458f5e4ac15e1848ae0bde32fe5b5f3" kindref="member">Flash_Write16</ref>((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t*)NvMcuMd,<sp/><ref refid="group__main__module_1gaad3c46d89d0030281432298983b6c29b" kindref="member">MODE_NUM</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//LEDs_On(LED_GREEN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//send<sp/>the<sp/>startup<sp/>packets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>success<sp/>&amp;=<sp/>SendStartupPackets();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleStartupPacket(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Respond<sp/>to<sp/>a<sp/>startup<sp/>packet<sp/>sent<sp/>from<sp/>the<sp/>PC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>Packet_Parameter2<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>Packet_Parameter3<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SendStartupPackets();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleFlashProgram(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*address;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>Packet_Parameter1<sp/>==<sp/>0x08,<sp/>erase<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>==<sp/>0x08)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___flash__module_1ga06868787ccef73e69bd236d3b93b68f3" kindref="member">Flash_Erase</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>address<sp/>=<sp/>(uint32_t*)(Packet_Parameter1<sp/>+<sp/>FLASH_DATA_START);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>&lt;=7<sp/>&amp;&amp;<sp/>Packet_Parameter2<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___flash__module_1ga1e6f34b272d8ed7b0f897b43e65f2cc0" kindref="member">Flash_Write8</ref>((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t*)address,<sp/>Packet_Parameter3);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleFlashRead(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//read<sp/>from<sp/>the<sp/>flash<sp/>memory<sp/>and<sp/>return<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>&gt;=<sp/>0x00<sp/>&amp;&amp;<sp/>Packet_Parameter1<sp/>&lt;=<sp/>0x07<sp/>&amp;&amp;<sp/>Packet_Parameter23<sp/>==<sp/>0x0000)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_FLASH_READ,<sp/>Packet_Parameter1<sp/>+<sp/>FLASH_DATA_START,<sp/>Packet_Parameter2,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FB(Packet_Parameter1<sp/>+<sp/>FLASH_DATA_START));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleGetVersion(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>==<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>Packet_Parameter2<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>Packet_Parameter3<sp/>==<sp/>0x0D)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_VERSION,<sp/>Packet_Parameter1,<sp/><ref refid="group__main__module_1ga4f6628df3189e988b65658a725188fd4" kindref="member">MAJOR</ref>,<sp/><ref refid="group__main__module_1ga25fcd7302027275a87f9461635744e0e" kindref="member">MINOR</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleMCUProtocol(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//for<sp/>a<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Packet_Parameter1<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_PROTOCOL,<sp/>Packet_Parameter1,<sp/>0x00,<sp/>0x00);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//for<sp/>a<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//polling<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter2<sp/>==<sp/>ACCEL_MODE_POLL)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__accel__module_1gabdb9bb9ab0f994735b1f6adcd12a39a3" kindref="member">Accel_SetMode</ref>(ACCEL_MODE_POLL);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_PROTOCOL,<sp/>Packet_Parameter1,<sp/>Packet_Parameter2,<sp/>0x00);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//interrupt<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter2<sp/>==<sp/>ACCEL_MODE_INT)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__accel__module_1gabdb9bb9ab0f994735b1f6adcd12a39a3" kindref="member">Accel_SetMode</ref>(ACCEL_MODE_INT);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_PROTOCOL,<sp/>Packet_Parameter1,<sp/>Packet_Parameter2,<sp/>0x00);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleMCUNumber(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>==<sp/>0x01<sp/>&amp;&amp;<sp/>Packet_Parameter23<sp/>==<sp/>0x0000)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_NUMBER,<sp/>Packet_Parameter1,<sp/>NvMcuNb-&gt;s.Lo,<sp/>NvMcuNb-&gt;s.Hi);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>==<sp/>0x02)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___flash__module_1ga1458f5e4ac15e1848ae0bde32fe5b5f3" kindref="member">Flash_Write16</ref>((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t*)NvMcuNb,<sp/>Packet_Parameter23);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_NUMBER,<sp/>Packet_Parameter1,<sp/>NvMcuNb-&gt;s.Lo,<sp/>NvMcuNb-&gt;s.Hi);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleMCUTime(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//check<sp/>for<sp/>corrent<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Packet_Parameter1<sp/>&lt;<sp/>24<sp/>&amp;&amp;<sp/>Packet_Parameter2<sp/>&lt;<sp/>60<sp/>&amp;&amp;<sp/>Packet_Parameter3<sp/>&lt;<sp/>60)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_t_c__module_1gacbe916e4fad6bfc2ffcde604fa6afb52" kindref="member">RTC_Set</ref>(Packet_Parameter1,<sp/>Packet_Parameter2,<sp/>Packet_Parameter3);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleMCUMode(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Packet_Parameter1)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="comment">//get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Packet_Parameter23<sp/>==<sp/>0x0000)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_MODE,<sp/>Packet_Parameter1,<sp/>NvMcuMd-&gt;s.Lo,<sp/>NvMcuMd-&gt;s.Hi);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="comment">//set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___flash__module_1ga1458f5e4ac15e1848ae0bde32fe5b5f3" kindref="member">Flash_Write16</ref>((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t*)NvMcuMd,<sp/>Packet_Parameter23);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(MCU_MODE,<sp/>Packet_Parameter1,<sp/>NvMcuMd-&gt;s.Lo,<sp/>NvMcuMd-&gt;s.Hi);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandlePackets(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pseudocode:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Get<sp/>a<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>&quot;switch&quot;<sp/>on<sp/>the<sp/>Packet_Command,<sp/>but<sp/>ignore<sp/>the<sp/>top<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>Create<sp/>a<sp/>case<sp/>for<sp/>each<sp/>command,<sp/>which<sp/>calls<sp/>the<sp/>individual<sp/>command<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>CMD_STARTUP:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleStartupPacket();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>4.<sp/>Check<sp/>whether<sp/>an<sp/>ACK<sp/>was<sp/>requested<sp/>from<sp/>the<sp/>PC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>5.<sp/>If<sp/>an<sp/>ACK<sp/>was<sp/>requestedm<sp/>then<sp/>send<sp/>an<sp/>ACK/NAK<sp/>packet<sp/>based<sp/>on<sp/>the<sp/>success<sp/>of<sp/>the<sp/>command<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>command<sp/>=<sp/>Packet_Command<sp/>&amp;<sp/>0x0F;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group___packet__module_1gac58a17928cd5e556e1567b2fde9f88f0" kindref="member">Packet_Get</ref>())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//attempt<sp/>to<sp/>get<sp/>packet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Packet_Command<sp/>&amp;<sp/>0x0F)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_STARTUP:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleStartupPacket();<sp/><sp/></highlight><highlight class="comment">//handle<sp/>startup<sp/>packets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_FLASH_PROGRAM:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleFlashProgram();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_FLASH_READ:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleFlashRead();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_VERSION:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleGetVersion();<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//handle<sp/>get<sp/>version<sp/>packet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_PROTOCOL:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleMCUProtocol();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_NUMBER:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleMCUNumber();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//handle<sp/>mcu<sp/>number<sp/>packet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_TIME:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleMCUTime();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MCU_MODE:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>HandleMCUMode();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___f_t_m__module_1gabb34a0dd79d879502fd81c0efa9440ec" kindref="member">FTM_StartTimer</ref>(&amp;ChannelFTM))</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___l_e_ds__module_1gab83ce0564d78725d23783caa491a293a" kindref="member">LEDs_On</ref>(LED_BLUE);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>ACK<sp/>is<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Packet_Command<sp/>&amp;<sp/>PACKET_ACK_MASK)<sp/>==<sp/>PACKET_ACK_MASK<sp/>&amp;&amp;<sp/>(success<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(Packet_Command,<sp/>Packet_Parameter1,<sp/>Packet_Parameter2,<sp/>Packet_Parameter3);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Packet_Command<sp/>&amp;<sp/>PACKET_ACK_MASK)<sp/>==<sp/>PACKET_ACK_MASK<sp/>&amp;&amp;<sp/>(success<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___packet__module_1ga431a1e1da25a8214a502ec81f88fc3f1" kindref="member">Packet_Put</ref>(Packet_Command<sp/>&amp;<sp/>0x0F,<sp/>Packet_Parameter1,<sp/>Packet_Parameter2,<sp/>Packet_Parameter3);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__main__module_1ga840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>StructInit();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>initialisation<sp/>failed<sp/>return<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MCUInit())</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Poll<sp/>the<sp/>UART.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//UART_Poll();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Handle<sp/>any<sp/>packets<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>HandlePackets();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>END<sp/>main<sp/>*/</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Jeong/git/04/source/main.c"/>
  </compounddef>
</doxygen>
