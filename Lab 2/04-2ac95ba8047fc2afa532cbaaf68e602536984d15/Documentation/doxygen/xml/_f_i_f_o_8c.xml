<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_f_i_f_o_8c" kind="file" language="C++">
    <compoundname>FIFO.c</compoundname>
    <includes refid="_f_i_f_o_8h" local="yes">FIFO.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c</label>
        <link refid="_f_i_f_o_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>FIFO.h</label>
        <link refid="_f_i_f_o_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Types\types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___f_i_f_o__module_1ga78695bd259760403dac1e36bf8ccb234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FIFO_Init</definition>
        <argsstring>(TFIFO *const FIFO)</argsstring>
        <name>FIFO_Init</name>
        <param>
          <type><ref refid="struct_t_f_i_f_o" kindref="compound">TFIFO</ref> *const</type>
          <declname>FIFO</declname>
        </param>
        <briefdescription>
<para>Initialize the FIFO before first use. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FIFO</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the FIFO that needs initializing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool - TRUE if the FIFO was successfully initialised </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c" line="21" column="6" bodyfile="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c" bodystart="21" bodyend="32" declfile="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.h" declline="41" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___f_i_f_o__module_1gace64ba4e6bd943f990a294693156cc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FIFO_Put</definition>
        <argsstring>(TFIFO *const FIFO, const uint8_t data)</argsstring>
        <name>FIFO_Put</name>
        <param>
          <type><ref refid="struct_t_f_i_f_o" kindref="compound">TFIFO</ref> *const</type>
          <declname>FIFO</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Put one character into the FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FIFO</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a FIFO struct where data is to be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A byte of data to store in the FIFO buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool - TRUE if data is successfully stored in the FIFO. </para>
</simplesect>
<simplesect kind="note"><para>Assumes that FIFO_Init has been called. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c" line="34" column="6" bodyfile="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c" bodystart="34" bodyend="48" declfile="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___f_i_f_o__module_1ga6407e3daf24a826a7f17d3e48865e89a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FIFO_Get</definition>
        <argsstring>(TFIFO *const FIFO, uint8_t *const dataPtr)</argsstring>
        <name>FIFO_Get</name>
        <param>
          <type><ref refid="struct_t_f_i_f_o" kindref="compound">TFIFO</ref> *const</type>
          <declname>FIFO</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>dataPtr</declname>
        </param>
        <briefdescription>
<para>Get one character from the FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FIFO</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a FIFO struct with data to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a memory location to place the retrieved byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool - TRUE if data is successfully retrieved from the FIFO. </para>
</simplesect>
<simplesect kind="note"><para>Assumes that FIFO_Init has been called. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c" line="50" column="6" bodyfile="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c" bodystart="50" bodyend="64" declfile="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.h" declline="60" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Routines to implement a FIFO buffer. </para>
    </briefdescription>
    <detaileddescription>
<para>This contains the structure and &quot;methods&quot; for accessing a byte-wide FIFO.</para>
<para><simplesect kind="author"><para>George El Bazouni </para>
</simplesect>
<simplesect kind="date"><para>2020-03-25 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>new<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_i_f_o_8h" kindref="compound">FIFO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___f_i_f_o__module_1ga78695bd259760403dac1e36bf8ccb234" kindref="member">FIFO_Init</ref>(<ref refid="struct_t_f_i_f_o" kindref="compound">TFIFO</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FIFO)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FIFO)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unsuccessful<sp/>initialisation,<sp/>will<sp/>force<sp/>project<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a092a7559431a12616672354641908167" kindref="member">Start</ref><sp/><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>FIFO_Get<sp/>function<sp/>will<sp/>start<sp/>at<sp/>the<sp/>first<sp/>byte<sp/>in<sp/>the<sp/>FIFO<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a5063b875898a6f23a97aa3ca17f0544b" kindref="member">End</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>FIFO_Put<sp/>function<sp/>will<sp/>start<sp/>at<sp/>the<sp/>first<sp/>byte<sp/>in<sp/>the<sp/>FIFO<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1ace00017651a266a66a93aa5220967611" kindref="member">NbBytes</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>bytes<sp/>stored<sp/>initially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>initialising,<sp/>any<sp/>existing<sp/>FIFO<sp/>register<sp/>data<sp/>will<sp/>be<sp/>overwritten<sp/>when<sp/>reached<sp/>in<sp/>the<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boolean<sp/>return<sp/>for<sp/>successful<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___f_i_f_o__module_1gace64ba4e6bd943f990a294693156cc3b" kindref="member">FIFO_Put</ref>(<ref refid="struct_t_f_i_f_o" kindref="compound">TFIFO</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FIFO,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FIFO-&gt;<ref refid="struct_t_f_i_f_o_1ace00017651a266a66a93aa5220967611" kindref="member">NbBytes</ref><sp/>==<sp/>FIFO_SIZE)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for:<sp/>if<sp/>stored<sp/>bytes<sp/>exceeds<sp/>maximum<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>max<sp/>size<sp/>reached,<sp/>cancel<sp/>receiving<sp/>of<sp/>byte<sp/>from<sp/>UART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//put<sp/>the<sp/>item<sp/>in<sp/>the<sp/>buffer<sp/>and<sp/>update<sp/>the<sp/>circular<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a5a9d712880dc4f1d5571b96452cd85f8" kindref="member">Buffer</ref>[FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a5063b875898a6f23a97aa3ca17f0544b" kindref="member">End</ref>]=<sp/>data;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//current<sp/>buffer<sp/>position<sp/>value<sp/>overwritten<sp/>by<sp/>value<sp/>in<sp/>address<sp/>pointed<sp/>to<sp/>from<sp/>UART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1ace00017651a266a66a93aa5220967611" kindref="member">NbBytes</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//increase<sp/>counter<sp/>for<sp/>number<sp/>of<sp/>bytes<sp/>currently<sp/>stored<sp/>by<sp/>&apos;1&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a5063b875898a6f23a97aa3ca17f0544b" kindref="member">End</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Moves<sp/>buffer<sp/>address<sp/>for<sp/>next<sp/>received<sp/>byte<sp/>to<sp/>next<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a5063b875898a6f23a97aa3ca17f0544b" kindref="member">End</ref><sp/>==<sp/>FIFO_SIZE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>needs<sp/>to<sp/>wrap-around<sp/>to<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a5063b875898a6f23a97aa3ca17f0544b" kindref="member">End</ref>=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Next<sp/>received<sp/>byte<sp/>to<sp/>overwrite<sp/>stored<sp/>byte<sp/>in<sp/>first<sp/>buffer<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___f_i_f_o__module_1ga6407e3daf24a826a7f17d3e48865e89a" kindref="member">FIFO_Get</ref>(<ref refid="struct_t_f_i_f_o" kindref="compound">TFIFO</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FIFO,<sp/>uint8_t*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dataPtr)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FIFO-&gt;<ref refid="struct_t_f_i_f_o_1ace00017651a266a66a93aa5220967611" kindref="member">NbBytes</ref><sp/>==<sp/>0)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for:<sp/>any<sp/>not<sp/>transmitted<sp/>stored<sp/>bytes:<sp/>&apos;0&apos;<sp/>means<sp/>nothing<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>to<sp/>retrieve<sp/>a<sp/>character<sp/>from<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>*dataPtr<sp/>=<sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a5a9d712880dc4f1d5571b96452cd85f8" kindref="member">Buffer</ref>[FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a092a7559431a12616672354641908167" kindref="member">Start</ref>];<sp/><sp/><sp/></highlight><highlight class="comment">//points<sp/>to<sp/>address<sp/>in<sp/>buffer<sp/>with<sp/>next<sp/>byte<sp/>to<sp/>transmit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1ace00017651a266a66a93aa5220967611" kindref="member">NbBytes</ref>--;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//decrements<sp/>no.<sp/>of<sp/>not<sp/>transmitted<sp/>stored<sp/>bytes<sp/>by<sp/>&apos;1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a092a7559431a12616672354641908167" kindref="member">Start</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//moves<sp/>pointer<sp/>to<sp/>next<sp/>byte<sp/>to<sp/>be<sp/>transmitted<sp/>in<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a092a7559431a12616672354641908167" kindref="member">Start</ref><sp/>==<sp/>FIFO_SIZE)<sp/><sp/></highlight><highlight class="comment">//Start<sp/>needs<sp/>to<sp/>wrap-around<sp/>to<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>FIFO-&gt;<ref refid="struct_t_f_i_f_o_1a092a7559431a12616672354641908167" kindref="member">Start</ref>=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Next<sp/>transmitted<sp/>byte<sp/>to<sp/>be<sp/>sent<sp/>from<sp/>address<sp/>of<sp/>stored<sp/>byte<sp/>in<sp/>first<sp/>buffer<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Jeong/git/04/Modules/FIFO/FIFO.c"/>
  </compounddef>
</doxygen>
